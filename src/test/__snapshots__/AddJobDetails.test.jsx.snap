// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddJobDetails should render AddJobDetails 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddJobDetails
    address=""
    date="2019-04-08"
    description=""
    handleChange={[MockFunction]}
    model=""
    nextStep={[MockFunction]}
    pay=""
    title=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <PageHeader
          backButton={false}
          title="Add Job Details"
        />,
        <div
          className="page"
        >
          <form>
            <FormInput
              handleChange={[MockFunction]}
              name="title"
              placeholder="Enter job short descritpion"
              title="Title"
              type="text"
              value=""
            />
            <FormInput
              handleChange={[MockFunction]}
              name="date"
              placeholder="Enter job date"
              title="Date"
              type="date"
              value="2019-04-08"
            />
            <FormInput
              handleChange={[MockFunction]}
              name="address"
              placeholder="Enter job address"
              title="Address"
              type="text"
              value=""
            />
            <FormInput
              handleChange={[MockFunction]}
              name="pay"
              placeholder="Enter payment amount"
              title="Payment"
              type="number"
              value=""
            />
            <FormInput
              handleChange={[MockFunction]}
              name="description"
              placeholder="Enter job details"
              title="Description"
              type="textarea"
              value=""
            />
            <div
              className="form-submit"
            >
              <input
                onClick={[Function]}
                type="submit"
                value="Save and Continue"
              />
            </div>
          </form>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "action": undefined,
          "actionAltText": undefined,
          "actionIcon": undefined,
          "backButton": false,
          "goBackAction": undefined,
          "history": undefined,
          "title": "Add Job Details",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form>
            <FormInput
              handleChange={[MockFunction]}
              name="title"
              placeholder="Enter job short descritpion"
              title="Title"
              type="text"
              value=""
            />
            <FormInput
              handleChange={[MockFunction]}
              name="date"
              placeholder="Enter job date"
              title="Date"
              type="date"
              value="2019-04-08"
            />
            <FormInput
              handleChange={[MockFunction]}
              name="address"
              placeholder="Enter job address"
              title="Address"
              type="text"
              value=""
            />
            <FormInput
              handleChange={[MockFunction]}
              name="pay"
              placeholder="Enter payment amount"
              title="Payment"
              type="number"
              value=""
            />
            <FormInput
              handleChange={[MockFunction]}
              name="description"
              placeholder="Enter job details"
              title="Description"
              type="textarea"
              value=""
            />
            <div
              className="form-submit"
            >
              <input
                onClick={[Function]}
                type="submit"
                value="Save and Continue"
              />
            </div>
          </form>,
          "className": "page",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FormInput
                handleChange={[MockFunction]}
                name="title"
                placeholder="Enter job short descritpion"
                title="Title"
                type="text"
                value=""
              />,
              <FormInput
                handleChange={[MockFunction]}
                name="date"
                placeholder="Enter job date"
                title="Date"
                type="date"
                value="2019-04-08"
              />,
              <FormInput
                handleChange={[MockFunction]}
                name="address"
                placeholder="Enter job address"
                title="Address"
                type="text"
                value=""
              />,
              <FormInput
                handleChange={[MockFunction]}
                name="pay"
                placeholder="Enter payment amount"
                title="Payment"
                type="number"
                value=""
              />,
              <FormInput
                handleChange={[MockFunction]}
                name="description"
                placeholder="Enter job details"
                title="Description"
                type="textarea"
                value=""
              />,
              <div
                className="form-submit"
              >
                <input
                  onClick={[Function]}
                  type="submit"
                  value="Save and Continue"
                />
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleChange": [MockFunction],
                "name": "title",
                "placeholder": "Enter job short descritpion",
                "title": "Title",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleChange": [MockFunction],
                "name": "date",
                "placeholder": "Enter job date",
                "title": "Date",
                "type": "date",
                "value": "2019-04-08",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleChange": [MockFunction],
                "name": "address",
                "placeholder": "Enter job address",
                "title": "Address",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleChange": [MockFunction],
                "name": "pay",
                "placeholder": "Enter payment amount",
                "title": "Payment",
                "type": "number",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleChange": [MockFunction],
                "name": "description",
                "placeholder": "Enter job details",
                "title": "Description",
                "type": "textarea",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  onClick={[Function]}
                  type="submit"
                  value="Save and Continue"
                />,
                "className": "form-submit",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onClick": [Function],
                  "type": "submit",
                  "value": "Save and Continue",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <PageHeader
            backButton={false}
            title="Add Job Details"
          />,
          <div
            className="page"
          >
            <form>
              <FormInput
                handleChange={[MockFunction]}
                name="title"
                placeholder="Enter job short descritpion"
                title="Title"
                type="text"
                value=""
              />
              <FormInput
                handleChange={[MockFunction]}
                name="date"
                placeholder="Enter job date"
                title="Date"
                type="date"
                value="2019-04-08"
              />
              <FormInput
                handleChange={[MockFunction]}
                name="address"
                placeholder="Enter job address"
                title="Address"
                type="text"
                value=""
              />
              <FormInput
                handleChange={[MockFunction]}
                name="pay"
                placeholder="Enter payment amount"
                title="Payment"
                type="number"
                value=""
              />
              <FormInput
                handleChange={[MockFunction]}
                name="description"
                placeholder="Enter job details"
                title="Description"
                type="textarea"
                value=""
              />
              <div
                className="form-submit"
              >
                <input
                  onClick={[Function]}
                  type="submit"
                  value="Save and Continue"
                />
              </div>
            </form>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "action": undefined,
            "actionAltText": undefined,
            "actionIcon": undefined,
            "backButton": false,
            "goBackAction": undefined,
            "history": undefined,
            "title": "Add Job Details",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form>
              <FormInput
                handleChange={[MockFunction]}
                name="title"
                placeholder="Enter job short descritpion"
                title="Title"
                type="text"
                value=""
              />
              <FormInput
                handleChange={[MockFunction]}
                name="date"
                placeholder="Enter job date"
                title="Date"
                type="date"
                value="2019-04-08"
              />
              <FormInput
                handleChange={[MockFunction]}
                name="address"
                placeholder="Enter job address"
                title="Address"
                type="text"
                value=""
              />
              <FormInput
                handleChange={[MockFunction]}
                name="pay"
                placeholder="Enter payment amount"
                title="Payment"
                type="number"
                value=""
              />
              <FormInput
                handleChange={[MockFunction]}
                name="description"
                placeholder="Enter job details"
                title="Description"
                type="textarea"
                value=""
              />
              <div
                className="form-submit"
              >
                <input
                  onClick={[Function]}
                  type="submit"
                  value="Save and Continue"
                />
              </div>
            </form>,
            "className": "page",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <FormInput
                  handleChange={[MockFunction]}
                  name="title"
                  placeholder="Enter job short descritpion"
                  title="Title"
                  type="text"
                  value=""
                />,
                <FormInput
                  handleChange={[MockFunction]}
                  name="date"
                  placeholder="Enter job date"
                  title="Date"
                  type="date"
                  value="2019-04-08"
                />,
                <FormInput
                  handleChange={[MockFunction]}
                  name="address"
                  placeholder="Enter job address"
                  title="Address"
                  type="text"
                  value=""
                />,
                <FormInput
                  handleChange={[MockFunction]}
                  name="pay"
                  placeholder="Enter payment amount"
                  title="Payment"
                  type="number"
                  value=""
                />,
                <FormInput
                  handleChange={[MockFunction]}
                  name="description"
                  placeholder="Enter job details"
                  title="Description"
                  type="textarea"
                  value=""
                />,
                <div
                  className="form-submit"
                >
                  <input
                    onClick={[Function]}
                    type="submit"
                    value="Save and Continue"
                  />
                </div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "handleChange": [MockFunction],
                  "name": "title",
                  "placeholder": "Enter job short descritpion",
                  "title": "Title",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "handleChange": [MockFunction],
                  "name": "date",
                  "placeholder": "Enter job date",
                  "title": "Date",
                  "type": "date",
                  "value": "2019-04-08",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "handleChange": [MockFunction],
                  "name": "address",
                  "placeholder": "Enter job address",
                  "title": "Address",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "handleChange": [MockFunction],
                  "name": "pay",
                  "placeholder": "Enter payment amount",
                  "title": "Payment",
                  "type": "number",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "handleChange": [MockFunction],
                  "name": "description",
                  "placeholder": "Enter job details",
                  "title": "Description",
                  "type": "textarea",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    onClick={[Function]}
                    type="submit"
                    value="Save and Continue"
                  />,
                  "className": "form-submit",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onClick": [Function],
                    "type": "submit",
                    "value": "Save and Continue",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
